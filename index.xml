<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>LESSISMORE</title><link>https://rhyzx.github.io/</link><description>Recent content on LESSISMORE</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sun, 11 Oct 2015 00:00:00 +0000</lastBuildDate><atom:link href="https://rhyzx.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://rhyzx.github.io/resume/</link><pubDate>Fri, 17 Sep 2021 00:00:00 +0000</pubDate><guid>https://rhyzx.github.io/resume/</guid><description>忻斌 90 年，男； 主修前端，辅修 web 开发相关的各种技能，认同 RoR 的开发理念； 热爱开源，为多个开源项目提过 PR，如 Babel、Vue、jQuery、Async； 喜欢钻技术，略有强迫症。
邮箱：rhyzix@gmail.com 电话：17326069639 学历：专科（2008–2011 浙江金融职业学院 国际金融） GitHub：https://github.com/rhyzx 求职意向 前端工程优化工具开发 WebGL 领域应用探索 专业技能 精通 Javascript，熟练使用常见的前端 MV* 框架（Vue、React、Svelte）、动画图形库（Pixi、Threejs）和构建工具（Webpack） 了解 HTTP 协议，熟练使用 Nodejs、RoR、PHP 等平台或语言进行后端开发 熟悉 MySQL、PostgreSQL 与基本的 SQL 性能优化 熟悉 Linux 环境与 Git 版本管理 了解 Docker 并熟练使用 K8S 进行产品部署 了解微信小程序与小游戏开发 部分了解图形学实时渲染技术 项目经历 2018–2021 @YIZ #半自由职业 #开发 维护公司各类设施，如基于 K8S 进行应用部署、证书自动申请（letsencrypt）、CDN证书自动同步
参与各类营销类 H5 页面、HTML5 游戏、小程序、小游戏的开发（包括后端），主要基于 Pixi.js、Three.js、Nodejs 和 Rails，如：LOL十周年庆H5、 LOL寻找本命导师、 LOL暗星皮肤、 OPPO答题、 太空梦、 王者听力测试、 虚幻争霸</description></item><item><title>nginx 生产环境配置小记</title><link>https://rhyzx.github.io/posts/2015-10-11-nginx-configuration-for-production/</link><pubDate>Sun, 11 Oct 2015 00:00:00 +0000</pubDate><guid>https://rhyzx.github.io/posts/2015-10-11-nginx-configuration-for-production/</guid><description>最近无聊试着通过 nginx 把部在 openshift 上的一个论坛反代，结果速度提升非常明显，顺便把 https 也加上了。
因为之前基本没怎么研究过 nginx，这次也从中梳理了一遍 nginx 的针对生产环境的相关配置，在此做个记录。
图省事的可以直接抄这个配置。
proxy pass 也就是常说的反向代理，在生产环境中 nginx 一般以前端代理服务器存在， 负责把请求转发到相应的后端服务（python、nodejs 等）。对应的 nginx 指令为 proxy_pass URL，eg：
server { listen 80; server_name example.com; location / { proxy_pass http://127.0.0.1:3000; } } 其实到这里服务就已经可以正常访问了，但为了对后端服务友好，还需要加几项配置：
server { listen 80; server_name example.com; location / { proxy_set_header HOST $host; proxy_set_header X-Forwarded-Proto $scheme; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_pass http://127.0.0.1:3000; } } 也就是添加修改几个 http headers，其中最重要的是HOST，因为经过 proxy pass 到达后端的请求的 HOST header 成了 nginx 访问后端的 host（127.</description></item><item><title>React 的 Virtual DOM</title><link>https://rhyzx.github.io/posts/2015-08-01-virtual-dom-on-react/</link><pubDate>Sat, 01 Aug 2015 00:00:00 +0000</pubDate><guid>https://rhyzx.github.io/posts/2015-08-01-virtual-dom-on-react/</guid><description>&lt;p>Virtual DOM 是 &lt;a href="http://facebook.github.io/react/">React&lt;/a> 运作的核心，在了解 Virtual DOM 之前，
得先明白为什么需要这项技术。&lt;/p>
&lt;p>&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;/p></description></item><item><title>Hello World</title><link>https://rhyzx.github.io/posts/2012-09-10-hello-world/</link><pubDate>Mon, 10 Sep 2012 00:00:00 +0000</pubDate><guid>https://rhyzx.github.io/posts/2012-09-10-hello-world/</guid><description>console.log('Cheeeeeese!=w=')</description></item></channel></rss>